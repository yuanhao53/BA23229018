// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// adam_optimization
NumericVector adam_optimization(NumericMatrix X, NumericVector y, double lr, double beta1, double beta2, double epsilon, int num_iters);
RcppExport SEXP _BA23229018_adam_optimization(SEXP XSEXP, SEXP ySEXP, SEXP lrSEXP, SEXP beta1SEXP, SEXP beta2SEXP, SEXP epsilonSEXP, SEXP num_itersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lr(lrSEXP);
    Rcpp::traits::input_parameter< double >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< double >::type beta2(beta2SEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type num_iters(num_itersSEXP);
    rcpp_result_gen = Rcpp::wrap(adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters));
    return rcpp_result_gen;
END_RCPP
}
// gradient_descent
NumericVector gradient_descent(NumericMatrix X, NumericVector y, double lr, int num_iters);
RcppExport SEXP _BA23229018_gradient_descent(SEXP XSEXP, SEXP ySEXP, SEXP lrSEXP, SEXP num_itersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lr(lrSEXP);
    Rcpp::traits::input_parameter< int >::type num_iters(num_itersSEXP);
    rcpp_result_gen = Rcpp::wrap(gradient_descent(X, y, lr, num_iters));
    return rcpp_result_gen;
END_RCPP
}
// minibatch_gradient_descent
NumericVector minibatch_gradient_descent(NumericMatrix X, NumericVector y, double lr, int num_iters, int batch_size);
RcppExport SEXP _BA23229018_minibatch_gradient_descent(SEXP XSEXP, SEXP ySEXP, SEXP lrSEXP, SEXP num_itersSEXP, SEXP batch_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lr(lrSEXP);
    Rcpp::traits::input_parameter< int >::type num_iters(num_itersSEXP);
    Rcpp::traits::input_parameter< int >::type batch_size(batch_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(minibatch_gradient_descent(X, y, lr, num_iters, batch_size));
    return rcpp_result_gen;
END_RCPP
}
// stochastic_gradient_descent
NumericVector stochastic_gradient_descent(NumericMatrix X, NumericVector y, double lr, int num_iters);
RcppExport SEXP _BA23229018_stochastic_gradient_descent(SEXP XSEXP, SEXP ySEXP, SEXP lrSEXP, SEXP num_itersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lr(lrSEXP);
    Rcpp::traits::input_parameter< int >::type num_iters(num_itersSEXP);
    rcpp_result_gen = Rcpp::wrap(stochastic_gradient_descent(X, y, lr, num_iters));
    return rcpp_result_gen;
END_RCPP
}
// sgd_momentum
NumericVector sgd_momentum(NumericMatrix X, NumericVector y, double lr, double momentum, int num_iters);
RcppExport SEXP _BA23229018_sgd_momentum(SEXP XSEXP, SEXP ySEXP, SEXP lrSEXP, SEXP momentumSEXP, SEXP num_itersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lr(lrSEXP);
    Rcpp::traits::input_parameter< double >::type momentum(momentumSEXP);
    Rcpp::traits::input_parameter< int >::type num_iters(num_itersSEXP);
    rcpp_result_gen = Rcpp::wrap(sgd_momentum(X, y, lr, momentum, num_iters));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BA23229018_adam_optimization", (DL_FUNC) &_BA23229018_adam_optimization, 7},
    {"_BA23229018_gradient_descent", (DL_FUNC) &_BA23229018_gradient_descent, 4},
    {"_BA23229018_minibatch_gradient_descent", (DL_FUNC) &_BA23229018_minibatch_gradient_descent, 5},
    {"_BA23229018_stochastic_gradient_descent", (DL_FUNC) &_BA23229018_stochastic_gradient_descent, 4},
    {"_BA23229018_sgd_momentum", (DL_FUNC) &_BA23229018_sgd_momentum, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_BA23229018(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
