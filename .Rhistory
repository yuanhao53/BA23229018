devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::build_vignettes()
devtools::document()
vignette <- readRDS("~/Desktop/Rproject/BA23229018/Meta/vignette.rds")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
Rcpp::sourceCpp('NeuralNetwork.cpp')
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::load_all()
X <- matrix(runif(1000), ncol = 20)
y <- runif(50)
lr <- 0.01
num_iters <- 100
theta <- gradient_descent(X, y, lr, num_iters)
theta
help(gradient_descent)
X*predict
X*theta
size(X)
shape(X)
X
theta*X
X %*% theta
y
X
theta
theta <- gradient_descent(X, y, lr, num_iters)
theta
devtools::load_all()
theta <- gradient_descent(X, y, lr, num_iters)
theta
devtools::document()
devtools::load_all()
theta <- gradient_descent(X, y, lr, num_iters)
theta
devtools::document()
devtools::document()
devtools:check()
devtools::check()
devtools::load_all()
X <- matrix(runif(1000), ncol = 20)
y <- runif(50)
lr <- 0.01
num_iters <- 100
theta <- gradient_descent(X, y, lr, num_iters)
theta
X*theta
X%*%theta
y
X
X%*%theta
devtools::document()
devtools::document()
devtools::check()
devtools::load_all()
theta <- gradient_descent(X, y, lr, num_iters)
theta
num_iters = 10000
theta
theta <- gradient_descent(X, y, lr, num_iters)
theta
devtools::document()
devtools::load_all()
theta <- gradient_descent(X, y, lr, num_iters)
theta
num_iters = 1
theta <- gradient_descent(X, y, lr, num_iters)
theta
num_iters = 10
theta
theta <- gradient_descent(X, y, lr, num_iters)
theta
y
y = 2*rbinorm(50)-1
y = 2*rbinom(50)-1
y = 2*rbinom(50, size = 1)-1
y = 2*rbinom(50, 1, 0.5)-1
y
theta <- gradient_descent(X, y, lr, num_iters)
theta
num_iters = 10000
theta <- gradient_descent(X, y, lr, num_iters)
theta
lr = 0.0001
theta <- gradient_descent(X, y, lr, num_iters)
theta
X%*%theta
sum(abs(X%*%theta-y))
sum(abs(y))
num_iters = 1
theta <- gradient_descent(X, y, lr, num_iters)
sum(abs(X%*%theta-y))
num_iters = 100000
theta <- gradient_descent(X, y, lr, num_iters)
sum(abs(X%*%theta-y))
lr <- 0.001
num_iters = 10000
theta <- gradient_descent(X, y, lr, num_iters)
sum(abs(X%*%theta-y))
devtools::document()
devtools::check()
theta <- stochastic_gradient_descent(X, y, lr, num_iters)
devtools::load_all()
theta <- stochastic_gradient_descent(X, y, lr, num_iters)
theta <- stochastic_gradient_descent(X, y, lr, num_iters)
devtools::document()
devtools::check()
devtools::build_vignettes
devtools::build_vignettes()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::load_all()
theta <- stochastic_gradient_descent(X, y, lr, num_iters)
theta
sum(abs(X%*%theta-y))
num_iters
lr = 0.01
theta <- stochastic_gradient_descent(X, y, lr, num_iters)
theta
sum(abs(X%*%theta-y))
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
thetamini <- minibatch_gradient_descent(X, y, lr, num_iters, 10)
thetamini
devtools::load_all()
thetasgdm <- sgd_momentum(X, y, lr, 0.9, num_iters)
thetasgdm
num_iters
devtools::load_all()
beta1 <- 0.9
beta2 <- 0.999
epsilon <- 1e-8
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
num_iters <- 1
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
devtools::load_all()
lr
lr = 0.001
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
num_iters = 10000
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
lr = 0.0001
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
lr = 0.0000001
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
num_iters = 100
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
num_items = 10
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
num_items = 2
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
num_items = 1
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
devtools::load_all()
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
y
beta1
beta2
epsilon
theta_adam
num_iters = 0
theta_adam
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
num_iters = 1
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
num_iters = 10
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
num_iters = 2
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
num_iters = 5
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
devtools::load_all()
num_iters = 10000
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
theta_adam
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
devtools::load_all()
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
num_iters <- 5
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
devtools::load_all()
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
lr
lr = 0.001
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
num_iters = 1000
theta_adam <- adam_optimization(X, y, lr, beta1, beta2, epsilon, num_iters)
theta_adam
devtools::build(vignettes = FALSE)
library(roxygen2)
roxygen2::roxygenize()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::build_vignettes()
devtools::check()
devtools::build(vignettes = FALSE)
Sys.sleep(0.1)
# 示例数据
train_inputs <- matrix(c(0, 0, 0, 1, 1, 0, 1, 1), ncol = 2, byrow = TRUE)
# 训练模型
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
source("~/Desktop/Rproject/BA23229018/R/utils.R")
# 训练模型
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
devtools::load_all()
train_inputs <- matrix(c(0, 0, 0, 1, 1, 0, 1, 1), ncol = 2, byrow = TRUE)
train_targets <- c(0, 1, 1, 0)
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
devtools::load_all()
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
devtools::load_all()
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
train_inputs <- matrix(c(0, 0, 0, 1, 1, 0, 1, 1), ncol = 2, byrow = TRUE)
train_targets <- c(0, 1, 1, 0)
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
train_inputs <- matrix(c(0, 0, 0, 1, 1, 0, 1, 1), ncol = 2, byrow = TRUE)
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
devtools::document()
devtools::build()
devtools::load_all()
devtools::load_all()
rm(list = c('mlp_train'))
devtools::load_all()
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
train_inputs <- matrix(c(0, 0, 0, 1, 1, 0, 1, 1), ncol = 2, byrow = TRUE)
train_targets <- c(0, 1, 1, 0)
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
train_inputs <- matrix(c(0, 0, 0, 1, 1, 0, 1, 1), ncol = 2, byrow = TRUE)
train_targets <- c(0, 1, 1, 0)
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
devtools::load_all()
train_inputs <- matrix(c(0, 0, 0, 1, 1, 0, 1, 1), ncol = 2, byrow = TRUE)
train_targets <- c(0, 1, 1, 0)
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
loss_history
plot(train_targets, type = 'l')
train_inputs <- matrix(c(0, 0, 0, 1, 1, 0, 1, 1), ncol = 2, byrow = TRUE)
train_targets <- c(0, 1, 1, 0)
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
devtools::load_all()
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
i = 100
i %% 100
i && 100 ==0
devtools::load_all()
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
devtools::load_all()
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
abs(100%%100)<=1e-3
abs(100%%100)<1e-3
devtools::load_all()
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
devtools::load_all()
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
train_inputs <- matrix(runif(1000), ncol = 20, byrow = TRUE)
train_targets <- 2*rbinom(50, 1, 0.5)-1
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
train_inputs <- matrix(runif(10000), ncol = 20, byrow = TRUE)
train_targets <- 2*rbinom(500, 1, 0.5)-1
mlp_train(train_inputs, train_targets, hidden_size = 4, lr = 0.1, epochs = 1000, lambda = 0.01)
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.01, epochs = 1000, lambda = 0.01)
train_inputs <- matrix(runif(10000), ncol = 20, byrow = TRUE)
train_targets <- 2*rbinom(500, 1, 0.5)-1
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.01, epochs = 1000, lambda = 0.01)
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.01, epochs = 100, lambda = 0.01)
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.01, epochs = 50, lambda = 0.001)
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.001, epochs = 50, lambda = 0.001)
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.0001, epochs = 50, lambda = 0.001)
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.001, epochs = 50, lambda = 0.001)
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.001, epochs = 50, lambda = 0.001)
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.001, epochs = 50, lambda = 0.001)
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.001, epochs = 50, lambda = 0.001)
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.001, epochs = 50, lambda = 0.001)
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.01, epochs = 50, lambda = 0.001)
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.01, epochs = 50, lambda = 0.001)
devtools::load_all()
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.01, epochs = 50, lambda = 0.001)
devtools::load_all()
mlp_train(train_inputs, train_targets, hidden_size = 8, lr = 0.01, epochs = 50, lambda = 0.001)
devtools::document()
devtools::document()
